{"version":3,"sources":["components/ClickableIcon/ClickableIcon.module.css","containers/Card/Card.module.css","containers/AnimeList/AnimeList.module.css","api/kitsu.io.js","containers/Header/index.js","images/SolidHeart.js","images/SolidStar.js","components/ClickableIcon/index.js","containers/Card/index.js","containers/AnimeList/index.js","images/MagnifyingGlass.js","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["module","exports","api","axios","create","baseURL","headers","Header","style","textAlign","SolidHeart","props","xmlns","viewBox","d","SolidStar","ClickableIcon","isSelected","selectColor","runFunction","Icon","innerProps","ref","useRef","className","styles","IconWrapper","join","onClick","star","current","classList","remove","active","add","setTimeout","fill","height","width","margin","cursor","Card","imageURL","name","favorites","rating","clickIcon","index","favorite","rate","backgroundImage","NameWrapper","display","justifyContent","alignItems","AnimeList","list","results","fetchData","Wrapper","dataLength","length","next","hasMore","loader","map","el","cover","attributes","posterImage","title","canonicalTitle","titles","en","large","original","favoritesCount","averageRating","MagnifyingGlass","App","appRef","useState","searchAnime","setsearchAnime","setResult","allResults","setAllResults","loading","setLoading","pageLoaded","setPageLoaded","animeList","setAnimeList","allAnimeList","setAllAnimeList","filterFaved","setFilterFaved","filterRated","setFilterRated","fetchAnimeList","a","fetchNew","focus","obj","encodeURI","kitsuApi","get","params","data","links","split","pop","meta","count","useEffect","arr","filter","UserInteraction","FilterWrapper","marginRight","stroke","strokeWidth","SearchWrapper","SearchIcon","SearchBox","disabled","value","onKeyDown","e","keyCode","onChange","target","func","arrTwo","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,OAAS,8BAA8B,OAAS,8BAA8B,KAAO,8B,mBCAxJD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,mBCA1DD,EAAOC,QAAU,CAAC,QAAU,6B,qKCSbC,E,OARHC,EAAMC,OAAO,CACvBC,QAAS,4BACTC,QAAS,CACP,OAAU,2BACV,eAAgB,8B,OCELC,EARA,WACb,OACE,8BACE,oBAAIC,MAAO,CAACC,UAAW,UAAvB,2BCOSC,MARf,SAAoBC,GAClB,OACE,6CAAKC,MAAM,6BAA6BC,QAAQ,eAAkBF,GAAlE,aACE,sBAAMG,EAAE,iPCKCC,MARf,SAAmBJ,GACjB,OACE,6CAAKC,MAAM,6BAA6BC,QAAQ,eAAkBF,GAAlE,aACE,sBAAMG,EAAE,kT,iBCaCE,EAfO,SAAC,GAA8E,IAAD,IAA5EC,kBAA4E,aAAxDC,mBAAwD,MAA1C,MAA0C,EAAnCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WAC5EC,EAAMC,iBAAO,MACnB,OACE,sBAAMD,IAAKA,EAAKE,UAAW,CAACC,IAAOC,aAAaC,KAAK,KAAMC,QAAS,WAClE,IAAMC,EAAOP,EAAIQ,QACjBD,EAAKE,UAAUC,OAAOP,IAAOQ,QAC7BJ,EAAKE,UAAUG,IAAIT,IAAOQ,QAC1BE,YAAW,WAAQN,EAAKE,UAAUC,OAAOP,IAAOQ,UAAW,KAC3Dd,KALF,SAOG,cAACC,EAAD,aAAMgB,KAAMnB,EAAaC,EAAc,QAASmB,OAAO,QAAQC,MAAM,QAAQ9B,MAAO,CAAE+B,OAAQ,eAAgBC,OAAQ,YAAkBnB,O,iBCyBhIoB,EAjCF,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,SAAUC,EAAgE,EAAhEA,KAAMC,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAC7E,OACE,qBAAKzB,UAAW,CAACC,IAAOgB,KAAM,aAAad,KAAK,KAAMnB,MAAO,CAAE0C,gBAAgB,QAAD,OAAUR,EAAV,OAA9E,SACE,sBAAKlB,UAAWC,IAAO0B,YAAvB,UACE,+BAAOR,IACP,sBAAKnC,MAAO,CACV4C,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UADzD,UAIE,cAAC,EAAD,CACElC,KAAML,EACNE,WAAYgC,EACZ/B,YAAY,SACZC,YAAa,WACX2B,EAAUC,EAAO,WAEpBF,GAAU,EAEX,cAAC,EAAD,CACEzB,KAAMV,EACNO,WAAY+B,EACZ9B,YAAY,MACZC,YAAa,WACX2B,EAAUC,EAAO,eAEpBC,EAAWJ,EAAY,EAAIA,W,yBCSvBW,EAlCG,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASX,EAA2B,EAA3BA,UAAWY,EAAgB,EAAhBA,UAC7C,OACE,cAAC,IAAD,CACElC,UAAWC,IAAOkC,QAClBC,WAAYJ,EAAKK,OACjBC,KAAMJ,EACNK,QAASP,EAAKK,OAASJ,EACvBO,OAAQ,4CALV,SAOGR,EAAKS,KAAI,SAACC,EAAInB,GACb,IAAMoB,EAAQD,EAAGE,WAAWC,YACxBC,EAAQJ,EAAGE,WAAWG,eAI1B,OAHIL,EAAGE,WAAWI,SAChBF,EAAQJ,EAAGE,WAAWI,OAAOC,IAAMH,GAGnC,cAAC,WAAD,UACE,cAAC,EAAD,CACEvB,MAAOA,EACPL,SAAUyB,IAAUA,EAAMO,OAASP,EAAMQ,UACzChC,KAAM2B,EACN1B,UAAWsB,EAAGE,WAAWQ,eACzB9B,UAAWA,EACXD,OAAQqB,EAAGE,WAAWS,cACtB7B,SAAUkB,EAAGlB,SACbC,KAAMiB,EAAGjB,QATEqB,EAAQvB,S,gBCXlB+B,MARf,SAAyBnE,GACvB,OACE,6CAAKC,MAAM,6BAA6BC,QAAQ,eAAkBF,GAAlE,aACE,sBAAMG,EAAE,0XC+JCiE,MA1Jf,WACE,IAAMzD,EAAMC,iBAAO,MACbyD,EAASzD,iBAAO,MACtB,EAAsC0D,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA6BF,mBAAS,GAAtC,mBAAOxB,EAAP,KAAgB2B,EAAhB,KACA,EAAoCH,mBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAAoCP,mBAAS,GAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KACA,EAAkCT,mBAAS,IAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KACA,EAAwCX,mBAAS,IAAjD,mBAAOY,EAAP,KAAqBC,EAArB,KACA,EAAsCb,oBAAS,GAA/C,mBAAOc,EAAP,KAAoBC,EAApB,KACA,EAAsCf,oBAAS,GAA/C,mBAAOgB,EAAP,KAAoBC,EAApB,KAEMC,GAAc,uCAAG,8CAAAC,EAAA,6DAAOC,EAAP,gCACrBb,GAAW,GAEPlE,EAAIQ,SACNR,EAAIQ,QAAQwE,QAGVC,EAAM,GACU,KAAhBrB,IACFqB,EAAI,gBAAkBC,UAAUtB,IATb,SAWEuB,EAASC,IAAI,SAAU,CAC5CC,OAAO,2BACFJ,GADC,IAEJ,cAAe,GACf,eAAgBF,EAAW,EAAIZ,EAC/B,gBAAiB,+EAhBA,iBAWbmB,EAXa,EAWbA,MASCC,MAAM/C,MACb4B,EAAckB,EAAKC,MAAM/C,KAAKgD,MAAM,KAAKC,OAG3C3B,EAAUwB,EAAKI,KAAKC,OACpB3B,EAAcsB,EAAKI,KAAKC,OAEpBZ,GACFT,EAAa,YAAIgB,EAAKA,OACtBd,EAAgB,YAAIc,EAAKA,SAEzBhB,EAAa,GAAD,mBAAKD,GAAL,YAAmBiB,EAAKA,QACpCd,EAAgB,GAAD,mBAAKH,GAAL,YAAmBiB,EAAKA,SAEzCpB,GAAW,GAlCU,4CAAH,qDAiGpB,OAtCA0B,qBAAU,WAAM,4CACd,8BAAAd,EAAA,sEACyBK,EAASC,IAAI,SAAU,CAC5CC,OAAQ,CACN,eAAgBH,UAAU,aAC1B,cAAe,GACf,eAAgB,EAChB,gBAAiB,8EANvB,gBACUI,EADV,EACUA,KAQRhB,EAAa,YAAIgB,EAAKA,OACtBd,EAAgB,YAAIc,EAAKA,OACzBxB,EAAU,IACVE,EAAc,IAZhB,4CADc,uBAAC,WAAD,wBAed5B,KACC,IAEHwD,qBAAU,WACR,IAAIC,EAAG,YAAOtB,GAEVE,IACFoB,EAAG,YAAOA,EAAIC,QAAO,SAAAlD,GAAE,OAAIA,EAAGlB,aAC9BoC,EAAU+B,EAAItD,SAGZoC,IACFkB,EAAG,YAAOA,EAAIC,QAAO,SAAAlD,GAAE,OAAIA,EAAGjB,SAC9BmC,EAAU+B,EAAItD,SAGhB+B,EAAauB,GACRpB,GAAgBE,GACnBb,EAAUC,KAEX,CAACU,EAAaE,EAAaJ,EAAcR,IAI1C,qBAAK/D,IAAK0D,EAAQxD,UAAWC,IAAOsD,IAApC,SACE,sBAAKvD,UAAWC,IAAOkC,QAAvB,UACE,cAAC,EAAD,IACA,sBAAKnC,UAAWC,IAAO4F,gBAAvB,UACE,sBAAK7F,UAAWC,IAAO6F,cAAvB,UACE,sBAAM9G,MAAO,CAAE+G,YAAa,QAA5B,oBACA,cAAC,EAAD,CACEnG,KAAML,EACNE,WAAYgF,EACZ/E,YAAY,SACZG,WAAY,CACVmG,OAAQ,QACRC,YAAa,OAEftG,YAAa,WACX+E,GAAgBD,MAEpB,cAAC,EAAD,CACE7E,KAAMV,EACNO,WAAY8E,EACZ7E,YAAY,MACZG,WAAY,CACVmG,OAAQ,QACRC,YAAa,MACbnF,MAAO,OAETnB,YAAa,WACX6E,GAAgBD,SAItB,sBAAKvE,UAAWC,IAAOiG,cAAvB,UACE,cAAC,EAAD,CAAiBlG,UAAWC,IAAOkG,WAAYtF,OAAO,MAAMC,MAAM,MAAMV,QAAS,kBAAMuE,IAAe,MACtG,uBAAO7E,IAAKA,EAAKE,UAAWC,IAAOmG,UAAWC,SAAUtC,EAASuC,MAAO5C,EAAa6C,UA9E9E,SAACC,GACE,KAAdA,EAAEC,SACJ9B,IAAe,IA4EiG+B,SAAU,SAACF,GAAD,OAAO7C,EAAe6C,EAAEG,OAAOL,aAErJ,sBAAKtH,MAAO,CAAE8B,MAAO,KAArB,UAA6BmB,EAA7B,iBAEF,cAAC,EAAD,CAAWA,QAASA,EAASC,UAAWyC,GAAgB3C,KAAMmC,EAAW7C,UAlG3D,SAACC,GAA8B,IAAvBqF,EAAsB,uDAAf,WAC3BjB,EAAG,YAAOxB,GAChBwB,EAAIpE,GAAJ,2BACKoE,EAAIpE,IADT,kBAEGqF,GAAOjB,EAAIpE,GAAOqF,KAErB,IAAMC,EAAS,YAAIxC,GAAc5B,KAAI,SAAAC,GACnC,OAAIiD,EAAIpE,GAAOuF,KAAOpE,EAAGoE,GAChB,2BAAKpE,GAAZ,kBAAiBkE,GAAOlE,EAAGkE,KAEtBlE,KAET0B,EAAa,YAAIuB,IACjBrB,EAAgB,YAAIuC,aC7DTE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAvI,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,qBAAqB,cAAgB,2BAA2B,OAAS,oBAAoB,gBAAkB,6BAA6B,cAAgB,2BAA2B,WAAa,wBAAwB,UAAY,uBAAuB,cAAc,yBAAyB,aAAa,wBAAwB,WAAW,yB","file":"static/js/main.06e4adb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconWrapper\":\"ClickableIcon_IconWrapper__3GHWt\",\"active\":\"ClickableIcon_active__2Gwjd\",\"effect\":\"ClickableIcon_effect__3MDa-\",\"Icon\":\"ClickableIcon_Icon__28bHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__8RVqm\",\"NameWrapper\":\"Card_NameWrapper__1u1qB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"AnimeList_Wrapper__3iURa\"};","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://kitsu.io/api/edge',\r\n  headers: {\r\n    'Accept': 'application/vnd.api+json',\r\n    'Content-Type': 'application/vnd.api+json'\r\n  }\r\n});\r\n\r\nexport default api;","const Header = () => {\r\n  return ( \r\n    <div>\r\n      <h1 style={{textAlign: 'center'}}>Anime List</h1>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Header;","import * as React from \"react\"\r\n\r\nfunction SolidHeart(props) {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\r\n      <path d=\"M472.1 270.5L279 470.2c-12.64 13.07-33.27 13.08-45.91.01l-193.2-199.7C-16.21 212.5-13.1 116.7 49.04 62.86 103.3 15.88 186.4 24.42 236.3 75.98L256 96.25l19.7-20.27c49.95-51.56 132.1-60.1 187.3-13.12 62.1 53.74 65.2 149.64 9.1 207.64z\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default SolidHeart;\r\n","import * as React from \"react\"\r\n\r\nfunction SolidStar(props) {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" {...props}>\r\n      <path d=\"M316.7 17.8l65.43 132.4 146.4 21.29c26.27 3.796 36.79 36.09 17.75 54.59l-105.9 102.1 25.05 145.5c4.508 26.31-23.23 45.9-46.49 33.7L288 439.6l-130.9 68.7c-23.3 12.2-51-7.4-46.5-33.7l25.05-145.5-105.93-103c-19.03-18.5-8.516-50.79 17.75-54.59l146.4-21.29 65.43-132.4c11.8-23.903 45.7-23.606 57.4-.02z\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default SolidStar;\r\n","import styles from './ClickableIcon.module.css';\r\nimport { useRef } from \"react\";\r\n\r\nconst ClickableIcon = ({isSelected = false, selectColor = \"red\", runFunction, Icon, innerProps}) => {\r\n  const ref = useRef(null);\r\n  return (\r\n    <span ref={ref} className={[styles.IconWrapper].join(' ')} onClick={() => {\r\n      const star = ref.current;\r\n      star.classList.remove(styles.active);\r\n      star.classList.add(styles.active);\r\n      setTimeout(() => { star.classList.remove(styles.active) }, 500);\r\n      runFunction();\r\n    }}>\r\n      {<Icon fill={isSelected ? selectColor : \"white\"} height=\"1.5em\" width=\"1.5em\" style={{ margin: '.25em .5em 0', cursor: 'pointer' }}  {...innerProps}/>}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default ClickableIcon;","import SolidHeart from 'images/SolidHeart';\r\nimport SolidStar from 'images/SolidStar';\r\nimport ClickableIcon from 'components/ClickableIcon';\r\nimport styles from './Card.module.css';\r\n\r\nconst Card = ({ imageURL, name, favorites, rating, clickIcon, index, favorite, rate }) => {\r\n  return (\r\n    <div className={[styles.Card, 'card-list'].join(' ')} style={{ backgroundImage: `url('${imageURL}')` }}>\r\n      <div className={styles.NameWrapper}>\r\n        <span>{name}</span>\r\n        <div style={{\r\n          display: 'flex', justifyContent: 'center', alignItems: 'center'\r\n        }}>\r\n\r\n          <ClickableIcon\r\n            Icon={SolidStar}\r\n            isSelected={rate}\r\n            selectColor=\"yellow\"\r\n            runFunction={() => {\r\n              clickIcon(index, 'rate');\r\n            }} />\r\n          {rating || 0.00}\r\n\r\n          <ClickableIcon\r\n            Icon={SolidHeart}\r\n            isSelected={favorite}\r\n            selectColor=\"red\"\r\n            runFunction={() => {\r\n              clickIcon(index, 'favorite');\r\n            }} />\r\n          {favorite ? favorites + 1 : favorites}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import { Fragment } from 'react';\r\nimport Card from 'containers/Card';\r\nimport styles from './AnimeList.module.css';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst AnimeList = ({ list, results, clickIcon, fetchData }) => {\r\n  return (\r\n    <InfiniteScroll\r\n      className={styles.Wrapper}\r\n      dataLength={list.length}\r\n      next={fetchData}\r\n      hasMore={list.length < results}\r\n      loader={<h4>Loading...</h4>}\r\n    >\r\n      {list.map((el, index) => {\r\n        const cover = el.attributes.posterImage;\r\n        let title = el.attributes.canonicalTitle;\r\n        if (el.attributes.titles) {\r\n          title = el.attributes.titles.en || title;\r\n        }\r\n        return (\r\n          <Fragment key={title + index}>\r\n            <Card\r\n              index={index}\r\n              imageURL={cover && (cover.large || cover.original)}\r\n              name={title}\r\n              favorites={el.attributes.favoritesCount}\r\n              clickIcon={clickIcon}\r\n              rating={el.attributes.averageRating}\r\n              favorite={el.favorite}\r\n              rate={el.rate}\r\n            />\r\n          </Fragment>\r\n        );\r\n      })}\r\n    </InfiniteScroll>\r\n  );\r\n}\r\n\r\nexport default AnimeList;","import * as React from \"react\"\r\n\r\nfunction MagnifyingGlass(props) {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\r\n      <path d=\"M500.3 443.7L380.6 324c27.22-40.41 40.65-90.9 33.46-144.7C401.8 87.79 326.8 13.32 235.2 1.723 99.01-15.51-15.51 99.01 1.724 235.2c11.6 91.64 86.08 166.7 177.6 178.9 53.8 7.189 104.3-6.236 144.7-33.46l119.7 119.7c15.62 15.62 40.95 15.62 56.57 0 15.606-15.64 15.606-41.04.006-56.64zM79.1 208c0-70.58 57.42-128 128-128s128 57.42 128 128-57.42 128-128 128-128-57.4-128-128z\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default MagnifyingGlass\r\n","import { useState, useEffect, useRef } from 'react';\nimport kitsuApi from 'api/kitsu.io';\nimport Header from 'containers/Header';\nimport AnimeList from 'containers/AnimeList';\nimport styles from './App.module.css';\nimport ClickableIcon from 'components/ClickableIcon';\nimport SolidHeart from 'images/SolidHeart';\nimport SolidStar from 'images/SolidStar';\nimport MagnifyingGlass from 'images/MagnifyingGlass';\n\nfunction App() {\n  const ref = useRef(null);\n  const appRef = useRef(null);\n  const [searchAnime, setsearchAnime] = useState('');\n  const [results, setResult] = useState(0);\n  const [allResults, setAllResults] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [pageLoaded, setPageLoaded] = useState(0);\n  const [animeList, setAnimeList] = useState([]);\n  const [allAnimeList, setAllAnimeList] = useState([]);\n  const [filterFaved, setFilterFaved] = useState(false);\n  const [filterRated, setFilterRated] = useState(false);\n\n  const fetchAnimeList = async (fetchNew = false) => {\n    setLoading(true);\n\n    if (ref.current) {\n      ref.current.focus();\n    }\n\n    let obj = {};\n    if (searchAnime !== '') {\n      obj['filter[text]'] = encodeURI(searchAnime);\n    }\n    const { data } = await kitsuApi.get('/anime', {\n      params: {\n        ...obj,\n        'page[limit]': 16,\n        'page[offset]': fetchNew ? 0 : pageLoaded,\n        'fields[anime]': 'startDate,canonicalTitle,favoritesCount,averageRating,titles,posterImage',\n      }\n    });\n\n    if (data.links.next) {\n      setPageLoaded(data.links.next.split('=').pop());\n    }\n\n    setResult(data.meta.count);\n    setAllResults(data.meta.count);\n\n    if (fetchNew) {\n      setAnimeList([...data.data]);\n      setAllAnimeList([...data.data]);\n    } else {\n      setAnimeList([...animeList, ...data.data]);\n      setAllAnimeList([...animeList, ...data.data]);\n    }\n    setLoading(false);\n  };\n\n  const onClickIcon = (index, func = 'favorite') => {\n    const arr = [...animeList];\n    arr[index] = {\n      ...arr[index],\n      [func]: arr[index][func] ? false : true,\n    }\n    const arrTwo = [...allAnimeList].map(el => {\n      if (arr[index].id === el.id) {\n        return { ...el, [func]: el[func] ? false : true }\n      }\n      return el;\n    });\n    setAnimeList([...arr]);\n    setAllAnimeList([...arrTwo]);\n  }\n\n  const keyPress = (e) => {\n    if (e.keyCode === 13) {\n      fetchAnimeList(true);\n    }\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const { data } = await kitsuApi.get('/anime', {\n        params: {\n          'filter[text]': encodeURI('alchemist'),\n          'page[limit]': 12,\n          'page[offset]': 0,\n          'fields[anime]': 'startDate,canonicalTitle,favoritesCount,averageRating,titles,posterImage',\n        }\n      });\n      setAnimeList([...data.data]);\n      setAllAnimeList([...data.data]);\n      setResult(12);\n      setAllResults(12);\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    let arr = [...allAnimeList];\n\n    if (filterFaved) {\n      arr = [...arr.filter(el => el.favorite)]\n      setResult(arr.length)\n    }\n\n    if (filterRated) {\n      arr = [...arr.filter(el => el.rate)]\n      setResult(arr.length)\n    }\n\n    setAnimeList(arr);\n    if (!filterFaved && !filterRated) {\n      setResult(allResults);\n    }\n  }, [filterFaved, filterRated, allAnimeList, allResults])\n\n\n  return (\n    <div ref={appRef} className={styles.App}>\n      <div className={styles.Wrapper}>\n        <Header />\n        <div className={styles.UserInteraction}>\n          <div className={styles.FilterWrapper}>\n            <span style={{ marginRight: '.5em' }}>Filter</span>\n            <ClickableIcon\n              Icon={SolidStar}\n              isSelected={filterRated}\n              selectColor=\"yellow\"\n              innerProps={{\n                stroke: \"black\",\n                strokeWidth: \"2em\"\n              }}\n              runFunction={() => {\n                setFilterRated(!filterRated);\n              }} />\n            <ClickableIcon\n              Icon={SolidHeart}\n              isSelected={filterFaved}\n              selectColor=\"red\"\n              innerProps={{\n                stroke: \"black\",\n                strokeWidth: \"2em\",\n                width: \"2em\"\n              }}\n              runFunction={() => {\n                setFilterFaved(!filterFaved);\n              }} />\n\n          </div>\n          <div className={styles.SearchWrapper}>\n            <MagnifyingGlass className={styles.SearchIcon} height=\"1em\" width=\"1em\" onClick={() => fetchAnimeList(true)} />\n            <input ref={ref} className={styles.SearchBox} disabled={loading} value={searchAnime} onKeyDown={keyPress} onChange={(e) => setsearchAnime(e.target.value)} />\n          </div>\n          <div style={{ width: 100 }}>{results} Results</div>\n        </div>\n        <AnimeList results={results} fetchData={fetchAnimeList} list={animeList} clickIcon={onClickIcon} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2Ugye\",\"Wrapper\":\"App_Wrapper__KSFDH\",\"FilterWrapper\":\"App_FilterWrapper__1gVux\",\"Loader\":\"App_Loader__1YmCJ\",\"UserInteraction\":\"App_UserInteraction__2knfF\",\"SearchWrapper\":\"App_SearchWrapper__3qrLA\",\"SearchIcon\":\"App_SearchIcon__fkCz2\",\"SearchBox\":\"App_SearchBox__2QvFc\",\"Loader-spin\":\"App_Loader-spin__1qsIT\",\"App-header\":\"App_App-header__1gauG\",\"App-link\":\"App_App-link__5zyY0\"};"],"sourceRoot":""}